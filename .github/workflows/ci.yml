name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Cache Go dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            src/go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        working-directory: src
        run: go mod download

      - name: Create UI dist placeholder
        working-directory: src/ui
        run: |
          mkdir -p dist
          echo "placeholder" > dist/index.html

      - name: Run Go tests
        working-directory: src
        run: go test -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build application
        run: ./build.sh

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: thousands2-binary
          path: dist/thousands2

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: thousands2-binary
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Create vault password script
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          touch vault_pass.txt
          chmod 600 vault_pass.txt
          echo "$ANSIBLE_VAULT_PASSWORD" > deploy/vault_pass.txt

      - name: Deploy with Ansible
        working-directory: deploy
        run: ansible-playbook -i inventory/hosts deploy.yml --vault-password-file vault_pass.txt

      - name: Cleanup
        if: always()
        run: |
          rm -f vault_pass.txt
          rm -f ~/.ssh/id_ed25519 